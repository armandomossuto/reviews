{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\a.mossuto.moreno\\\\Documents\\\\GitHub\\\\reviews\\\\src\\\\components\\\\search\\\\search_review.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { handleSearchTermChange } from '../../actions/handleSearchTermChange.js';\n\nvar SearchReview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchReview, _Component);\n\n  function SearchReview(props) {\n    var _this;\n\n    _classCallCheck(this, SearchReview);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SearchReview).call(this, props));\n    _this.state = {\n      redirect: false\n    };\n    _this.checkKey = _this.checkKey.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChange = _this.onChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(SearchReview, [{\n    key: \"checkKey\",\n    value: function checkKey(event) {\n      // This event handler just checks if key pressed was Enter to excute onSubmit \n      if (event.key === \"Enter\") {\n        this.onSubmit();\n      }\n    }\n  }, {\n    key: \"onChange\",\n    value: function onChange(event) {\n      // Handles change of value of the input. This is the only way to handle it with React.\n      handleSearchTermChange(event.target.value);\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      // Handles when user submits the search. Changes redirect to TRUE, so next time render is excuted it will redirect to Search component\n      this.setState({\n        redirect: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var redirect = this.state.redirect;\n      var searchTerm = this.props.searchTerm; // Checks if user submitted the search query. If true redirects to Search component\n\n      if (redirect) {\n        return React.createElement(Redirect, {\n          push: true,\n          to: \"/search?query=\" + searchTerm + \"?page=1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        });\n      } // If not, renders this component normally\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Product name, type, ...\",\n        value: searchTerm,\n        onChange: this.onChange,\n        onKeyDown: this.checkKey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"search_icon.png\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return SearchReview;\n}(Component);\n\nexport default connect(function (state) {\n  return {\n    searchTerm: state.searchTerm\n  };\n}, {\n  handleSearchTermChange: handleSearchTermChange\n})(SearchReview);","map":{"version":3,"sources":["C:\\Users\\a.mossuto.moreno\\Documents\\GitHub\\reviews\\src\\components\\search\\search_review.js"],"names":["React","Component","Redirect","connect","handleSearchTermChange","SearchReview","props","state","redirect","checkKey","bind","onChange","onSubmit","event","key","target","value","setState","searchTerm"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,sBAAT,QAAuC,yCAAvC;;IAEMC,Y;;;;;AAEJ,wBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,sFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAIA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,uDAAhB;AACA,UAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcD,IAAd,uDAAhB;AACA,UAAKE,QAAL,GAAgB,MAAKA,QAAL,CAAcF,IAAd,uDAAhB;AATiB;AAUlB;;;;6BAEQG,K,EAAO;AACd;AACA,UAAGA,KAAK,CAACC,GAAN,KAAY,OAAf,EAAwB;AACtB,aAAKF,QAAL;AACD;AACF;;;6BAEQC,K,EAAO;AACd;AACAT,MAAAA,sBAAsB,CAACS,KAAK,CAACE,MAAN,CAAaC,KAAd,CAAtB;AACD;;;+BAEU;AACT;AACD,WAAKC,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AACA;;;6BAEQ;AAAA,UACCA,QADD,GACc,KAAKD,KADnB,CACCC,QADD;AAAA,UAECU,UAFD,GAEgB,KAAKZ,KAFrB,CAECY,UAFD,EAGP;;AACA,UAAGV,QAAH,EAAa;AACX,eAAO,oBAAC,QAAD;AAAU,UAAA,IAAI,MAAd;AAAe,UAAA,EAAE,EAAE,mBAAiBU,UAAjB,GAA4B,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OANM,CAOT;;;AACE,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,yBAFd;AAGE,QAAA,KAAK,EAAEA,UAHT;AAIE,QAAA,QAAQ,EAAE,KAAKP,QAJjB;AAKE,QAAA,SAAS,EAAE,KAAKF,QALlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,KAAKG,QAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAIE;AAAK,QAAA,GAAG,EAAC,iBAAT;AAA2B,QAAA,GAAG,EAAC,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CARF,CADJ;AAiBD;;;;EAxDwBX,S;;AA2D3B,eAAeE,OAAO,CAAC,UAAAI,KAAK;AAAA,SAAK;AAAEW,IAAAA,UAAU,EAAEX,KAAK,CAACW;AAApB,GAAL;AAAA,CAAN,EAA8C;AAAEd,EAAAA,sBAAsB,EAAtBA;AAAF,CAA9C,CAAP,CAAiFC,YAAjF,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport { connect } from 'react-redux';\nimport { handleSearchTermChange } from '../../actions/handleSearchTermChange.js'\n\nclass SearchReview extends Component {\n\n  constructor(props) {\n    super(props);\n    \n    this.state = {\n      redirect: false,\n    };\n\n    this.checkKey = this.checkKey.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  checkKey(event) {\n    // This event handler just checks if key pressed was Enter to excute onSubmit \n    if(event.key===\"Enter\") {\n      this.onSubmit();\n    }\n  }\n\n  onChange(event) {\n    // Handles change of value of the input. This is the only way to handle it with React.\n    handleSearchTermChange(event.target.value);\n  }\n\n  onSubmit() {\n    // Handles when user submits the search. Changes redirect to TRUE, so next time render is excuted it will redirect to Search component\n   this.setState({ redirect: true });\n  }\n\n  render() {\n    const { redirect } = this.state;\n    const { searchTerm } = this.props;\n    // Checks if user submitted the search query. If true redirects to Search component\n    if(redirect) {\n      return <Redirect push to={\"/search?query=\"+searchTerm+\"?page=1\"} />;\n    }\n  // If not, renders this component normally\n    return (\n        <div>\n          < input \n            type=\"text\" \n            placeholder=\"Product name, type, ...\" \n            value={searchTerm} \n            onChange={this.onChange} \n            onKeyDown={this.checkKey} \n          />\n          < button\n            type=\"submit\" \n            onClick={this.onSubmit} \n          > \n            <img src=\"search_icon.png\" alt=\"\" /> \n          </button>\n        </div>\n      );\n  }\n}\n\nexport default connect(state => ({ searchTerm: state.searchTerm }), { handleSearchTermChange })(SearchReview);"]},"metadata":{},"sourceType":"module"}